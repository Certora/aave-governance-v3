// conf file for VotingMachine - proposal_states.spec
{
    "files": [
        "security/certora/harness/voting/VotingMachineHarness.sol",
        "security/certora/harness/voting/VotingStrategyHarness.sol",
        "src/contracts/voting/DataWarehouse.sol",
        "src/contracts/voting/libs/StateProofVerifier.sol",
        "src/contracts/libraries/SlotUtils.sol",
        "lib/aave-delivery-infrastructure/src/contracts/CrossChainController.sol"
    ],
    "link": [
        "VotingMachineHarness:VOTING_STRATEGY=VotingStrategyHarness",
        "VotingMachineHarness:CROSS_CHAIN_CONTROLLER=CrossChainController",
        "VotingMachineHarness:DATA_WAREHOUSE=DataWarehouse",  // NOTE: same as in VotingStrategy
        "VotingStrategyHarness:DATA_WAREHOUSE=DataWarehouse"
    ],
    "packages": [
        "forge-std/=lib/adi-deploy/lib/aave-helpers/lib/forge-std/src",
        "aave-delivery-infrastructure/=lib/adi-deploy/lib/aave-delivery-infrastructure/src",
        "solidity-utils/=lib/adi-deploy/lib/aave-delivery-infrastructure/lib/solidity-utils/src",
        "openzeppelin-contracts/=lib/adi-deploy/lib/aave-delivery-infrastructure/lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts"
    ],
    "verify": "VotingMachineHarness:security/certora/specs/voting/proposal_states.spec",
    "optimistic_loop": true,
    "loop_iter": "4",
    "optimistic_hashing": true,
    "solc": "solc8.19",
    "parametric_contracts": [
        // Excluding DataWarehouse!
        "VotingMachineHarness",
        "VotingStrategyHarness",
        "CrossChainController"
    ],
    "rule_sanity": "basic",
    "build_cache": true,
    "msg": "VotingMachine - proposal states"
}
